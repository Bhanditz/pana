{
 "sdkVersion": "Dart VM version: 1.24.0-dev.5.0 (Fri May 19 08:42:29 2017) on \"linux_x64\"",
 "packageName": "shelf_auth",
 "packageVersion": "0.7.4",
 "dartFiles": [
  "example/authorisation_example.dart",
  "example/example.dart",
  "example/example_with_jwt_session.dart",
  "example/example_with_login_and_jwt_session.dart",
  "lib/models.dart",
  "lib/shelf_auth.dart",
  "lib/spi.dart",
  "lib/src/authentication.dart",
  "lib/src/authentication_builder.dart",
  "lib/src/authentication_impl.dart",
  "lib/src/authenticators/basic_auth.dart",
  "lib/src/authenticators/core.dart",
  "lib/src/authenticators/username_password_auth.dart",
  "lib/src/authorisation.dart",
  "lib/src/authorisation_builder.dart",
  "lib/src/authorisation_impl.dart",
  "lib/src/authorisers/authenticated_only_authoriser.dart",
  "lib/src/authorisers/authoriser_with_exclusions.dart",
  "lib/src/authorisers/principal_whitelist_authoriser.dart",
  "lib/src/authorisers/same_origin_authoriser.dart",
  "lib/src/context.dart",
  "lib/src/core.dart",
  "lib/src/preconditions.dart",
  "lib/src/principal/user_lookup.dart",
  "lib/src/session/jwt/jwt_session.dart",
  "lib/src/session/jwt/jwt_session_auth.dart",
  "lib/src/session/jwt/jwt_session_handler.dart",
  "lib/src/session/session_core.dart",
  "lib/src/util.dart",
  "lib/src/zone_context.dart",
  "test/authenticators/basic_auth_test.dart",
  "test/authenticators/username_password_auth_test.dart",
  "test/authorisers/all_authoriser_tests.dart",
  "test/authorisers/authenticated_only_authoriser_test.dart",
  "test/authorisers/authorisation_test.dart",
  "test/authorisers/authoriser_with_exclusions_test.dart",
  "test/authorisers/principal_whitelist_authoriser_test.dart",
  "test/authorisers/same_origin_authoriser_test.dart",
  "test/session/jwt/jwt_session_auth_test.dart",
  "test/session/jwt/jwt_session_handler_test.dart",
  "test/session/jwt/jwt_session_test.dart",
  "test/shelf_auth_test.dart",
  "test/src/matchers.dart"
 ],
 "pubSummary": {
  "packages": {
   "analyzer": "0.30.0+2",
   "args": "0.13.7",
   "async": "1.13.3",
   "barback": "0.15.2+11",
   "bignum": "0.0.7",
   "boolean_selector": "1.0.2",
   "charcode": "1.1.1",
   "cipher": "0.7.1",
   "cli_util": "0.1.1",
   "collection": "1.14.1",
   "concepts": "0.2.0",
   "convert": "2.0.1",
   "crypto": "2.0.1",
   "csslib": "0.13.7+1",
   "dart_jwt": "0.5.2",
   "either": "0.1.8",
   "fixnum": "0.9.1+2",
   "front_end": "0.1.0-alpha.4",
   "glob": "1.1.3",
   "html": "0.13.1",
   "http": "0.11.3+13",
   "http_exception": "0.1.0",
   "http_multi_server": "2.0.3",
   "http_parser": "3.1.1",
   "isolate": "1.0.0",
   "kernel": "0.3.0-alpha.1",
   "logging": "0.11.3+1",
   "matcher": "0.12.1+1",
   "meta": "1.0.5",
   "mime": "0.9.3",
   "mock": "0.12.0",
   "mockito": "0.11.0",
   "option": "1.2.0",
   "package_config": "1.0.1",
   "package_resolver": "1.0.2",
   "path": "1.4.1",
   "petitparser": "1.5.4",
   "plugin": "0.2.0",
   "pool": "1.3.1",
   "pub_semver": "1.3.2",
   "quiver": "0.21.4",
   "shelf": "0.6.7+2",
   "shelf_exception_handler": "0.1.0",
   "shelf_packages_handler": "1.0.0",
   "shelf_path": "0.1.8",
   "shelf_response_formatter": "0.1.0",
   "shelf_route": "0.14.3",
   "shelf_static": "0.2.4",
   "shelf_web_socket": "0.2.1",
   "source_map_stack_trace": "1.1.4",
   "source_maps": "0.10.4",
   "source_span": "1.4.0",
   "stack_trace": "1.7.3",
   "stream_channel": "1.6.1",
   "string_scanner": "1.0.2",
   "term_glyph": "1.0.0",
   "test": "0.12.20+13",
   "typed_data": "1.1.3",
   "uri": "0.11.0",
   "utf": "0.9.0+3",
   "uuid": "0.5.3",
   "watcher": "0.9.7+3",
   "web_socket_channel": "1.0.4",
   "xml": "2.5.0",
   "yaml": "2.1.12"
  },
  "availablePackages": {
   "bignum": "0.1.0",
   "dart_jwt": "0.6.0",
   "fixnum": "0.10.5",
   "mockito": "2.0.2",
   "quiver": "0.25.0"
  },
  "pubspecContent": {
   "author": "Anders Holmgren <andersmholmgren@gmail.com>",
   "dependencies": {
    "dart_jwt": "^0.5.2",
    "http_exception": "^0.1.0",
    "matcher": "^0.12.0",
    "option": "^1.1.0",
    "shelf": "^0.6.2",
    "shelf_path": "^0.1.8",
    "uuid": ">=0.4.0 <0.6.0"
   },
   "description": "A shelf handler for authentication and authorisation",
   "dev_dependencies": {
    "mock": ">=0.11.0+1 <0.13.0",
    "mockito": ">=0.11.0 <0.12.0",
    "shelf_exception_handler": ">=0.1.0",
    "shelf_route": "^0.14.3",
    "test": "^0.12.0"
   },
   "environment": {
    "sdk": ">=1.16.0 <2.0.0"
   },
   "homepage": "https://bitbucket.org/andersmholmgren/shelf_auth",
   "name": "shelf_auth",
   "version": "0.7.4"
  }
 },
 "analyzerItems": [
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "example/example.dart",
   "line": 59,
   "col": 27,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "example/example_with_jwt_session.dart",
   "line": 61,
   "col": 27,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "example/example_with_login_and_jwt_session.dart",
   "line": 128,
   "col": 29,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "example/example_with_login_and_jwt_session.dart",
   "line": 137,
   "col": 29,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "lib/src/authenticators/username_password_auth.dart",
   "line": 76,
   "col": 33,
   "error": "The argument type '(Option<P>) → Option<dynamic>' can't be assigned to the parameter type '(Option<P>) → FutureOr<Option<AuthenticatedContext<P>>>'."
  },
  {
   "type": "ERROR|STATIC_TYPE_WARNING|UNDEFINED_GETTER",
   "file": "lib/src/authenticators/username_password_auth.dart",
   "line": 88,
   "col": 46,
   "error": "The getter 'username' isn't defined for the class 'Object'."
  },
  {
   "type": "ERROR|COMPILE_TIME_ERROR|STRONG_MODE_INVALID_CAST_FUNCTION",
   "file": "lib/src/session/jwt/jwt_session_auth.dart",
   "line": 41,
   "col": 26,
   "error": "The function 'decodeSessionToken' has type '(String, {validationContext: JwsValidationContext}) → JsonWebToken<SessionClaimSet>' that isn't of expected type '(String, {validationContext: JwsValidationContext}) → JsonWebToken<CS>'. This means its parameter or return type does not match what is expected."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "lib/src/session/jwt/jwt_session_auth.dart",
   "line": 41,
   "col": 26,
   "error": "'decodeSessionToken' is deprecated and shouldn't be used."
  },
  {
   "type": "ERROR|COMPILE_TIME_ERROR|STRONG_MODE_COULD_NOT_INFER",
   "file": "lib/src/session/jwt/jwt_session_auth.dart",
   "line": 72,
   "col": 20,
   "error": "Couldn't infer type parameter 'P'.\\n\\nTried to infer 'dynamic' for 'P' which doesn't work:\\n  Type parameter 'P' declared to extend 'Principal'.\\nThe type 'dynamic' was inferred from:\\n  Parameter 'principal' declared as     'P'\\n                        but argument is 'dynamic'.\\n\\nConsider passing explicit type argument(s) to the generic.\\n\\n"
  },
  {
   "type": "ERROR|COMPILE_TIME_ERROR|STRONG_MODE_INVALID_CAST_FUNCTION_EXPR",
   "file": "lib/src/session/jwt/jwt_session_handler.dart",
   "line": 49,
   "col": 13,
   "error": "The function expression type '(String, P, String, Duration, Duration) → Future<SessionClaimSet>' isn't of type '(String, P, String, Duration, Duration) → Future<CS>'. This means its parameter or return type does not match what is expected. Consider changing parameter type(s) or the returned type(s)."
  },
  {
   "type": "ERROR|COMPILE_TIME_ERROR|STRONG_MODE_INVALID_CAST_FUNCTION_EXPR",
   "file": "lib/src/session/jwt/jwt_session_handler.dart",
   "line": 71,
   "col": 27,
   "error": "The function expression type '(String, {validationContext: JwsValidationContext}) → JsonWebToken<JwtClaimSet>' isn't of type '(String, {validationContext: JwsValidationContext}) → JsonWebToken<CS>'. This means its parameter or return type does not match what is expected. Consider changing parameter type(s) or the returned type(s)."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/authenticators/basic_auth_test.dart",
   "line": 62,
   "col": 15,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "test/authenticators/basic_auth_test.dart",
   "line": 102,
   "col": 27,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/authenticators/username_password_auth_test.dart",
   "line": 63,
   "col": 72,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/authenticators/username_password_auth_test.dart",
   "line": 70,
   "col": 61,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "test/authenticators/username_password_auth_test.dart",
   "line": 95,
   "col": 27,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/session/jwt/jwt_session_auth_test.dart",
   "line": 26,
   "col": 7,
   "error": "'createSessionToken' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/session/jwt/jwt_session_auth_test.dart",
   "line": 84,
   "col": 72,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/session/jwt/jwt_session_auth_test.dart",
   "line": 90,
   "col": 64,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "ERROR|STATIC_WARNING|ARGUMENT_TYPE_NOT_ASSIGNABLE",
   "file": "test/session/jwt/jwt_session_auth_test.dart",
   "line": 125,
   "col": 27,
   "error": "The argument type 'Monad<Option>' can't be assigned to the parameter type 'FutureOr<Option<Principal>>'."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/session/jwt/jwt_session_test.dart",
   "line": 19,
   "col": 9,
   "error": "'createSessionToken' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/session/jwt/jwt_session_test.dart",
   "line": 20,
   "col": 50,
   "error": "'decodeSessionToken' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/shelf_auth_test.dart",
   "line": 178,
   "col": 46,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/shelf_auth_test.dart",
   "line": 188,
   "col": 19,
   "error": "'throws' is deprecated and shouldn't be used."
  },
  {
   "type": "INFO|HINT|DEPRECATED_MEMBER_USE",
   "file": "test/shelf_auth_test.dart",
   "line": 199,
   "col": 19,
   "error": "'throws' is deprecated and shouldn't be used."
  }
 ],
 "unformattedFiles": [
  "example/authorisation_example.dart",
  "example/example_with_jwt_session.dart",
  "lib/src/authentication.dart",
  "lib/src/authentication_impl.dart",
  "lib/src/authorisation_builder.dart",
  "lib/src/context.dart",
  "lib/src/session/jwt/jwt_session_auth.dart",
  "lib/src/session/jwt/jwt_session_handler.dart",
  "lib/src/zone_context.dart",
  "test/authenticators/username_password_auth_test.dart",
  "test/authorisers/principal_whitelist_authoriser_test.dart",
  "test/session/jwt/jwt_session_handler_test.dart"
 ]
}